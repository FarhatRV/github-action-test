on:
  # Trigger analysis when creating a pull request.
  pull_request:
    types: [opened, synchronize, reopened]

name: SonarQube Scan
jobs:
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
      - name: Checking out
        uses: actions/checkout@master
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: cd java-101 && ./gradlew build
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: java-101/
          args: >
            -Dsonar.verbose=true
            -Dsonar.projectKey=${{ secrets.KDUER_NAME }}-check
            -Dsonar.java.binaries=/build/classes
      # - name: SonarQube Scan
      #   uses: kitabisa/sonarqube-action@master
      #   with:
      #     host: ${{ secrets.SONAR_HOST_URL }}
      #     login: ${{ secrets.SONAR_TOKEN }}
      #     projectBaseDir: "github-action-test/java-101/src"
      #     projectKey: ${{ secrets.KDUER_NAME }}
